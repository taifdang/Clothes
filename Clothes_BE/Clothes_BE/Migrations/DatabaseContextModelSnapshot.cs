// <auto-generated />
using System;
using Clothes_BE.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clothes_BE.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Clothes_BE.Models.CartItems", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("cart_id")
                        .HasColumnType("int");

                    b.Property<int>("product_variant_id")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("cart_id");

                    b.HasIndex("product_variant_id");

                    b.ToTable("cart_items");
                });

            modelBuilder.Entity("Clothes_BE.Models.Carts", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("session_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("user_id");

                    b.ToTable("carts");
                });

            modelBuilder.Entity("Clothes_BE.Models.Categories", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("product_types_id")
                        .HasColumnType("int");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("product_types_id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("Clothes_BE.Models.Options", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("options");
                });

            modelBuilder.Entity("Clothes_BE.Models.OptionValues", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("option_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("option_id");

                    b.ToTable("option_values");
                });

            modelBuilder.Entity("Clothes_BE.Models.OrderDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("order_id")
                        .HasColumnType("int");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int>("product_variant_id")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("order_id");

                    b.HasIndex("product_variant_id");

                    b.ToTable("order_detail");
                });

            modelBuilder.Entity("Clothes_BE.Models.Orders", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("session_id")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("total")
                        .HasColumnType("float");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("user_id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("Clothes_BE.Models.ProductOptionImages", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("option_value_id")
                        .HasColumnType("int");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<string>("src")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("option_value_id");

                    b.HasIndex("product_id");

                    b.ToTable("product_option_images");
                });

            modelBuilder.Entity("Clothes_BE.Models.ProductOptions", b =>
                {
                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<string>("option_id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("product_id", "option_id");

                    b.HasIndex("option_id");

                    b.ToTable("product_options");
                });

            modelBuilder.Entity("Clothes_BE.Models.Products", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("category_id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("old_price")
                        .HasColumnType("float");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("category_id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("Clothes_BE.Models.ProductTypes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("product_types");
                });

            modelBuilder.Entity("Clothes_BE.Models.ProductVariants", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<double>("old_price")
                        .HasColumnType("float");

                    b.Property<double>("percent")
                        .HasColumnType("float");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.ToTable("product_variants");
                });

            modelBuilder.Entity("Clothes_BE.Models.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("expiry_time")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_lock")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("refresh_token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Clothes_BE.Models.Variants", b =>
                {
                    b.Property<int>("product_variant_id")
                        .HasColumnType("int");

                    b.Property<int>("option_value_id")
                        .HasColumnType("int");

                    b.HasKey("product_variant_id", "option_value_id");

                    b.HasIndex("option_value_id");

                    b.ToTable("variants");
                });

            modelBuilder.Entity("Clothes_BE.Models.CartItems", b =>
                {
                    b.HasOne("Clothes_BE.Models.Carts", "carts")
                        .WithMany("cartItems")
                        .HasForeignKey("cart_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clothes_BE.Models.ProductVariants", "product_variants")
                        .WithMany("cart_items")
                        .HasForeignKey("product_variant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("carts");

                    b.Navigation("product_variants");
                });

            modelBuilder.Entity("Clothes_BE.Models.Carts", b =>
                {
                    b.HasOne("Clothes_BE.Models.Users", "users")
                        .WithMany("carts")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("users");
                });

            modelBuilder.Entity("Clothes_BE.Models.Categories", b =>
                {
                    b.HasOne("Clothes_BE.Models.ProductTypes", "product_types")
                        .WithMany("categories")
                        .HasForeignKey("product_types_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product_types");
                });

            modelBuilder.Entity("Clothes_BE.Models.OptionValues", b =>
                {
                    b.HasOne("Clothes_BE.Models.Options", "options")
                        .WithMany("option_values")
                        .HasForeignKey("option_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("options");
                });

            modelBuilder.Entity("Clothes_BE.Models.OrderDetail", b =>
                {
                    b.HasOne("Clothes_BE.Models.Orders", "orders")
                        .WithMany("order_detail")
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clothes_BE.Models.ProductVariants", "product_variants")
                        .WithMany("order_detail")
                        .HasForeignKey("product_variant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("orders");

                    b.Navigation("product_variants");
                });

            modelBuilder.Entity("Clothes_BE.Models.Orders", b =>
                {
                    b.HasOne("Clothes_BE.Models.Users", "users")
                        .WithMany("orders")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("users");
                });

            modelBuilder.Entity("Clothes_BE.Models.ProductOptionImages", b =>
                {
                    b.HasOne("Clothes_BE.Models.OptionValues", "options_values")
                        .WithMany("product_option_images")
                        .HasForeignKey("option_value_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clothes_BE.Models.Products", "products")
                        .WithMany("product_option_images")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("options_values");

                    b.Navigation("products");
                });

            modelBuilder.Entity("Clothes_BE.Models.ProductOptions", b =>
                {
                    b.HasOne("Clothes_BE.Models.Options", "options")
                        .WithMany("product_options")
                        .HasForeignKey("option_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clothes_BE.Models.Products", "products")
                        .WithMany("product_options")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("options");

                    b.Navigation("products");
                });

            modelBuilder.Entity("Clothes_BE.Models.Products", b =>
                {
                    b.HasOne("Clothes_BE.Models.Categories", "categories")
                        .WithMany("products")
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categories");
                });

            modelBuilder.Entity("Clothes_BE.Models.ProductVariants", b =>
                {
                    b.HasOne("Clothes_BE.Models.Products", "products")
                        .WithMany("product_variants")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("products");
                });

            modelBuilder.Entity("Clothes_BE.Models.Variants", b =>
                {
                    b.HasOne("Clothes_BE.Models.OptionValues", "option_values")
                        .WithMany("variants")
                        .HasForeignKey("option_value_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clothes_BE.Models.ProductVariants", "product_variants")
                        .WithMany("variants")
                        .HasForeignKey("product_variant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("option_values");

                    b.Navigation("product_variants");
                });

            modelBuilder.Entity("Clothes_BE.Models.Carts", b =>
                {
                    b.Navigation("cartItems");
                });

            modelBuilder.Entity("Clothes_BE.Models.Categories", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("Clothes_BE.Models.Options", b =>
                {
                    b.Navigation("option_values");

                    b.Navigation("product_options");
                });

            modelBuilder.Entity("Clothes_BE.Models.OptionValues", b =>
                {
                    b.Navigation("product_option_images");

                    b.Navigation("variants");
                });

            modelBuilder.Entity("Clothes_BE.Models.Orders", b =>
                {
                    b.Navigation("order_detail");
                });

            modelBuilder.Entity("Clothes_BE.Models.Products", b =>
                {
                    b.Navigation("product_option_images");

                    b.Navigation("product_options");

                    b.Navigation("product_variants");
                });

            modelBuilder.Entity("Clothes_BE.Models.ProductTypes", b =>
                {
                    b.Navigation("categories");
                });

            modelBuilder.Entity("Clothes_BE.Models.ProductVariants", b =>
                {
                    b.Navigation("cart_items");

                    b.Navigation("order_detail");

                    b.Navigation("variants");
                });

            modelBuilder.Entity("Clothes_BE.Models.Users", b =>
                {
                    b.Navigation("carts");

                    b.Navigation("orders");
                });
#pragma warning restore 612, 618
        }
    }
}
